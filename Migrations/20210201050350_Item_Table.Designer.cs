// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storeak.Demo.Api.Infrastructure;

namespace Storeak.Demo.Api.Migrations
{
    [DbContext(typeof(DemoContext))]
    [Migration("20210201050350_Item_Table")]
    partial class Item_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Storeak.Demo.Api.Infrastructure.DataModel.CategorieDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategorieId")
                        .HasColumnName("CategorieId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<long>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Storeak.Demo.Api.Infrastructure.DataModel.EmployeeDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age")
                        .HasColumnName("Age");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<string>("FatherName")
                        .HasColumnName("FatherName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<long>("StoreId");

                    b.Property<int>("Type")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Storeak.Demo.Api.Infrastructure.DataModel.ItemDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("Money");

                    b.Property<Guid>("CategorieId");

                    b.Property<int>("Count");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<DateTime?>("ExpiryDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("Money");

                    b.Property<long>("StoreId");

                    b.Property<string>("UPC")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("UPC")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Storeak.Demo.Api.Infrastructure.DataModel.CategorieDto", b =>
                {
                    b.HasOne("Storeak.Demo.Api.Infrastructure.DataModel.CategorieDto", "Categorie")
                        .WithMany("Categories")
                        .HasForeignKey("CategorieId");
                });

            modelBuilder.Entity("Storeak.Demo.Api.Infrastructure.DataModel.ItemDto", b =>
                {
                    b.HasOne("Storeak.Demo.Api.Infrastructure.DataModel.CategorieDto", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
